General information
===================

Gfxprim is simple modular 2D bitmap graphics library with emphasis on speed
and correctness.

One of the key points of the library is meta-programming. Most of the
operations and filters are wriiten in http://jinja.pocoo.org/[Jinja]
templating language that is used to generate specialized code in C
programmming language. Creating code that works with less usuall pixel types
should be as easy as adding pixel definition into the configuration and
rebuilding the library. Read more link:gen.html[here].

Core
----

Core of the library contains minimal amount of code to define interface that
is shared between all parts of the library.

The most important part of the core is link:context.html[CP_Context] structure
that represents in-memory pixmap.

The Core also contains generated code for basic operations such as
link:get_put_pixel.html[GetPixel] and link:get_put_pixel.html[PutPixel] and
optimized code for writing continous line of pixels 'GP_WritePixels' that are
base for the more complex drawing primitives in GFX or for graphics operations
in Filters.

link:blits.html[Blits] are functions used to copy part of one bitmap into
another bitmap. The blits be also used for primitive bitmap pixel type
conversions (i.e.  RGB888 vs BGR888).

link:progress_callback.html[Progress Callback] is an interface that allows you
to monitor progress of an operation it is mainly used in loaders and filters.
Generally any operation that is not really quick takes optional pointer to
progress callback that allows your program to monitor and possibly abort the
operation.

link:debug.html[Debug] interface is used as unified facility to print debug
messages, control debug level, etc.

There is also support for link:gamma.html[Gamma] correction. Unfortunatelly
not all parts of library use it at the moment.

And last but not least Core is a home for some link:core.html[common macros]
that are used from different parts of the library.

Gfx
---

link:drawing_api.html[Gfx] is part of the library that implements basic
graphics primitives such as lines, circles, polygons, etc. Clasicall
primitives are nearly finished. Work on anti aliased primitives has been
started.

Text
----

link:text_api.html[Text] part of the library implements basic support for
printing text into the bitmap. There are two bitmap fonts compiled directly
into the library and we support True Type fonts through
link:http://freetype.org[FreeType] (so far ASCII printable characters only).

Loaders
-------

link:loaders.html[Loaders] are part that is resposible for loading and saving
images into various standard formats (PNG, JPEG, GIF, BMP, PNM, etc...).

.Currently supported formats
[width="100%",options="header"]
|=============================================================================
| Extension | Format Name | Signature | Read Support | Write Support

| JPEG | | [green]*Yes* | [green]*Yes* | [green]*Yes*

| PNG |
  Portable Network Graphics |
  [green]*Yes* |
  [green]#16 Bit RGB not supported# |
  [green]#16 Bit RGB not supported#

| GIF |
  Graphics Interchange Format |
  [green]*Yes* |
  [green]*Yes* |
  [black]*No*

| BMP | |
  [green]*Yes* |
  [green]#RLE and RGB Bitfields not implemented# |
  [green]#RGB888 only#

| TIFF |
  Tagged Image File Format |
  [green]*Yes* |
  [gray]#Not finished# |
  [black]*No*

| PSP |
  Paint Shop Pro Image |
  [green]*Yes* |
  [green]#Composite image only for newer formats than 3.0# |
  [black]*No*

| PBM PGM PNM |
  Netpbm portable bitmap |
  [black]*No* |
  [gray]#Not finished# |
  [gray]#Not finished#

|=============================================================================


Filters
-------

link:filters.html[Filters] are part of the library that implements bitmap
image filters.

.Currently Implemented Point Filters
[width="100%",options="header"]
|=============================================================================
| Filter Name | Supported Pixel Type | Multithreaded
| Brightness  | All                  | No
| Contrast    | All                  | No
|=============================================================================

.Currently Implemented Linear Filters
[width="100%",options="header"]
|=============================================================================
| Filter Name | Supported Pixel Type | Mutithreaded
| Convolution | RGB888               | Yes
| Separable Convolution | RGB888     | Yes
| Gaussian Blur | RGB888     | Yes
| Sobel Edge Detection | RGB888 | Yes
| Prewitt Edge Detection | RGB888 | Yes
|=============================================================================

NOTE: Linear filters are implemented using generic convolution filters, once
      convolution is rewritten to run for all pixel types the rest of filters
      will support them automatically.


.Currently Implemented Linear Filters
[width="100%",options="header"]
|=============================================================================
| Filter Name | Supported Pixel Type | Multithreaded
| Addition    | All                  | No
| Multiplication | All               | No
| Difference  | All                  | No
| Max, Min    | All                  | No
|=============================================================================

.Currently Implemented Ditherings
[width="100%",options="header"]
|=============================================================================
| Filter Name | Supported Pixel Type | Multithreaded
| Floyd Steinberg | RGB888 -> Any    | No
| Hilbert Peano | RGB888 -> Any    | No
|=============================================================================

.Currently Implemented Resamplings
[width="100%",options="header"]
|=============================================================================
| Filter Name | Supported Pixel Type | Multithreaded
| Nearest Neighbour | All           | No
| Bilinear (Integer Arithmetics) | RGB888 | No
| Bicubic (Integer Arithmetics) | All | No
| Bicubic (Float Arithmetics) | RGB888 | No
|=============================================================================

.Rotation and mirroring
[width="100%",options="header"]
|=============================================================================
| Filter Name | Supported Pixel Type | Multithreaded
| Rotate 90   | All                  | No
| Rotate 180  | All                  | No
| Rotate 270  | All                  | No
| Mirror Vertically | All            | No
| Mirror Horizontally | All          | No
|=============================================================================

.Misc filters
[width="100%",options="header"]
|=============================================================================
| Filter Name | Supported Pixel Type | Multithreaded
| Histogram   | All                  | No
| Additive Gaussian Noise | All      | No
| Median      | RGB888               | No
| Weighted Median | RGB888           | No
| Sigma Lee | RGB888                 | No
|=============================================================================

Backends
--------

link:backends.html[Backends] together with link:input.html[Input] are API for
drawing on screen (or into a window) and for getting keystrokes/mouse
coordinates. So far we support X11, linux framebuffer and SDL as a graphics
backend.


Work in progress
----------------

* Python bindings

* Anti Aliased drawing

* Gamma correction and color profiles

* Alfa channel blits
